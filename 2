from PIL import Image
import random

def swap_pixels(image):
    width, height = image.size
    pixels = image.load()

    for _ in range(10000):  # Number of swaps to perform
        x1 = random.randint(0, width - 1)
        y1 = random.randint(0, height - 1)
        x2 = random.randint(0, width - 1)
        y2 = random.randint(0, height - 1)

        # Swap the pixel values
        temp = pixels[x1, y1]
        pixels[x1, y1] = pixels[x2, y2]
        pixels[x2, y2] = temp

def apply_math_operation(image, operation):
    width, height = image.size
    pixels = image.load()

    for x in range(width):
        for y in range(height):
            r, g, b = pixels[x, y]

            if operation == "add":
                r = (r + 50) % 256
                g = (g + 50) % 256
                b = (b + 50) % 256
            elif operation == "subtract":
                r = (r - 50) % 256
                g = (g - 50) % 256
                b = (b - 50) % 256
            elif operation == "multiply":
                r = (r * 2) % 256
                g = (g * 2) % 256
                b = (b * 2) % 256
            elif operation == "divide":
                r = (r // 2) % 256
                g = (g // 2) % 256
                b = (b // 2) % 256

            pixels[x, y] = (r, g, b)

def main():
    # Load the image
    image_path = input("Enter the path to the image: ")
    image = Image.open(image_path)

    while True:
        print("\nChoose an encryption operation:")
        print("1. Swap pixels")
        print("2. Apply a mathematical operation (add, subtract, multiply, divide)")
        choice = input("Enter your choice (1 or 2): ")

        if choice == '1':
            swap_pixels(image)
            print("Pixel swapping applied.")
        elif choice == '2':
            operation = input("Enter the mathematical operation (add, subtract, multiply, divide): ").lower()
            if operation in ["add", "subtract", "multiply", "divide"]:
                apply_math_operation(image, operation)
                print(f"Mathematical operation '{operation}' applied.")
            else:
                print("Invalid operation. Please choose add, subtract, multiply, or divide.")
        else:
            print("Invalid choice. Please enter 1 or 2.")

        # Save the modified image
        save_path = input("Enter the path to save the encrypted image: ")
        image.save(save_path)
        print(f"Encrypted image saved to {save_path}")

        # Option to continue or exit
        continue_choice = input("Do you want to perform another operation? (yes/no): ").lower()
        if continue_choice != 'yes':
            break

if __name__ == "__main__":
    main()
